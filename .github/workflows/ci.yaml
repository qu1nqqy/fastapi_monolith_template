name: 🧪 CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    name: 🚀 Lint & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports: [6379:6379]

      minio:
        image: minio/minio
        ports: [9000:9000, 9001:9001]
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          --health-cmd "curl http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        command: server /data --console-address ":9001"

    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      S3_ENDPOINT: localhost:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: test-bucket

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install uv
        run: pip install uv

      - name: 🧹 Sync dependencies
        run: uv pip install --system --dev

      - name: 🧼 Run code style checks
        run: make check

      - name: ✅ Run tests
        run: pytest --cov=src --cov-report=term-missing

      - name: 📊 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov
